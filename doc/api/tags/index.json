{
  "resource": "Tags",
  "resource_explanation": null,
  "http_method": "GET",
  "route": "/tags",
  "description": "index",
  "explanation": null,
  "parameters": [
    {
      "type": "string",
      "example": "foo",
      "name": "name",
      "description": "Tag name"
    },
    {
      "type": "string",
      "enum": [
        "created_at,updated_at",
        "records_sum"
      ],
      "example": "created_at,updated_at,records_sum",
      "name": "fields",
      "description": "Specified fileds"
    },
    {
      "scope": "records_sum",
      "type": "integer",
      "example": 2000,
      "name": "lt",
      "description": "Recrods sum less than"
    },
    {
      "scope": "records_sum",
      "type": "integer",
      "example": -2000,
      "name": "gt",
      "description": "Records sum greater than"
    },
    {
      "scope": "order",
      "type": "string",
      "enum": [
        "desc",
        "asc"
      ],
      "example": "asc",
      "default": "desc",
      "name": "type",
      "description": "Order type"
    },
    {
      "scope": "order",
      "type": "string",
      "enum": [
        "name",
        "created_at",
        "updated_at",
        "records_sum"
      ],
      "default": "created_at",
      "example": "records_sum",
      "name": "field",
      "description": "Order field include all fields from card resource and records_sum if the field included in fields params"
    },
    {
      "scope": "record",
      "type": "string",
      "example": "sh&!ra",
      "name": "name",
      "description": "Record name (needed to sum filtered result)"
    },
    {
      "scope": "record",
      "type": "string",
      "example": "33&!55",
      "name": "card",
      "description": "Record card (needed to sum filtered result)"
    },
    {
      "scope": "record",
      "type": "string",
      "example": "la&!ba",
      "name": "tags",
      "description": "Record tags (needed to sum filtered result)"
    },
    {
      "scope": [
        "record",
        "performed_at"
      ],
      "type": "string",
      "example": "2020-02-02T18:56:00.000Z",
      "name": "gt",
      "description": "Record perfromed greater than (needed to sum filtered result)"
    },
    {
      "scope": [
        "record",
        "performed_at"
      ],
      "type": "string",
      "example": "2020-02-02T18:56:00.000Z",
      "name": "lt",
      "description": "Record performed less than (needed to sum filtered result)"
    }
  ],
  "response_fields": [

  ],
  "requests": [
    {
      "request_method": "GET",
      "request_path": "/tags?fields=created_at%2Cupdated_at%2Crecords_sum&order[type]=desc&order[field]=name",
      "request_body": null,
      "request_headers": {
        "Content-Type": "application/json",
        "Authorization": "Berier eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxNH0.ujZL7MZKhC6P9S2Fa_uzjdLHSJdV9z6MBTfl2_sTodY",
        "Host": "example.org"
      },
      "request_query_parameters": {
        "fields": "created_at,updated_at,records_sum",
        "order": {
          "type": "desc",
          "field": "name"
        }
      },
      "request_content_type": "application/json",
      "response_status": 200,
      "response_status_text": "OK",
      "response_body": "{\n  \"tags\": [\n    {\n      \"id\": 7,\n      \"name\": \"Zontrax\",\n      \"created_at\": \"2020-02-24T16:08:50.790Z\",\n      \"updated_at\": \"2020-02-24T16:08:50.790Z\",\n      \"records_sum\": \"0.0\"\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Y-Solowarm\",\n      \"created_at\": \"2020-02-24T16:08:50.788Z\",\n      \"updated_at\": \"2020-02-24T16:08:50.788Z\",\n      \"records_sum\": \"0.0\"\n    },\n    {\n      \"id\": 10,\n      \"name\": \"Sub-Ex\",\n      \"created_at\": \"2020-02-24T16:08:50.795Z\",\n      \"updated_at\": \"2020-02-24T16:08:50.795Z\",\n      \"records_sum\": \"0.0\"\n    },\n    {\n      \"id\": 5,\n      \"name\": \"Solarbreeze\",\n      \"created_at\": \"2020-02-24T16:08:50.787Z\",\n      \"updated_at\": \"2020-02-24T16:08:50.787Z\",\n      \"records_sum\": \"0.0\"\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Pannier\",\n      \"created_at\": \"2020-02-24T16:08:50.783Z\",\n      \"updated_at\": \"2020-02-24T16:08:50.783Z\",\n      \"records_sum\": \"0.0\"\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Home Ing\",\n      \"created_at\": \"2020-02-24T16:08:50.785Z\",\n      \"updated_at\": \"2020-02-24T16:08:50.785Z\",\n      \"records_sum\": \"0.0\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Fixflex\",\n      \"created_at\": \"2020-02-24T16:08:50.782Z\",\n      \"updated_at\": \"2020-02-24T16:08:50.782Z\",\n      \"records_sum\": \"0.0\"\n    },\n    {\n      \"id\": 9,\n      \"name\": \"Daltfresh\",\n      \"created_at\": \"2020-02-24T16:08:50.793Z\",\n      \"updated_at\": \"2020-02-24T16:08:50.793Z\",\n      \"records_sum\": \"0.0\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Cardify\",\n      \"created_at\": \"2020-02-24T16:08:50.792Z\",\n      \"updated_at\": \"2020-02-24T16:08:50.792Z\",\n      \"records_sum\": \"0.0\"\n    },\n    {\n      \"id\": 11,\n      \"name\": \"Andalax\",\n      \"created_at\": \"2020-02-24T16:08:50.796Z\",\n      \"updated_at\": \"2020-02-24T16:08:50.796Z\",\n      \"records_sum\": \"0.0\"\n    }\n  ]\n}",
      "response_headers": {
        "Content-Type": "application/json",
        "Content-Length": "1281"
      },
      "response_content_type": "application/json",
      "curl": "curl -g \"http://localhost:3000/tags?fields=created_at%2Cupdated_at%2Crecords_sum&order[type]=desc&order[field]=name\" -X GET \\\n\t-H \"Accept: application/json\" \\\n\t-H \"Content-Type: application/json\" \\\n\t-H \"Authorization: Berier eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxNH0.ujZL7MZKhC6P9S2Fa_uzjdLHSJdV9z6MBTfl2_sTodY\" \\\n\t-H \"Host: example.org\" \\\n\t-H \"Cookie: \""
    }
  ]
}